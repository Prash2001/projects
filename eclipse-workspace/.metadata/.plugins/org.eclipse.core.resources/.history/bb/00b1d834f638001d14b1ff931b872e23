package com.java.StreamDemo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
      Function<Stream<String>, Long> timeOperation = (Stream<String> stream) -> {
        long time1 = System.nanoTime();
        final List<String> list = 
           stream
             .map(String::toLowerCase)
             .collect(Collectors.toList());
        long time2 = System.nanoTime();
        return time2 - time1;
      };

      Consumer<Stream<String>> printTime = stream ->
        System.out.println(timeOperation.apply(stream) / 1000000f);

      String[] array = new String[1000000];
      Arrays.fill(array, "AbabagalamagA");

      Stream s = Arrays.stream(array);
       Stream s1 = (Stream) s.parallel();
      printTime.accept(s);            // prints around 600
      printTime.accept(s1); // prints around 900
    }
}
