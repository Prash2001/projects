package com.java.springdemo.controller;

import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.java.springdemo.entity.Product;
import com.java.springdemo.entity.User;
import com.java.springdemo.entity.WishList;
import com.java.springdemo.service.ProductService;
import com.java.springdemo.service.UserService;
import com.java.springdemo.service.WishListService;

@Controller
@RequestMapping("/wishlist")
public class WishListController {
  @Autowired
  private UserService userService;
  @Autowired
  private WishListService wishListService;
  @Autowired
  private ProductService productService;
  
  @GetMapping("/addToWishList")
  public String addToWishList(@RequestParam("wishListItem") int id, Model model,HttpSession session) {
    Product product = productService.getProductById(id);
    User us = (User)session.getAttribute("gandva");
    if(us==null) {
return "redirect:/user/login";
    }
    model.addAttribute("productId", id);
    if(checkIfProductAlreadyExists(us.getUsername(), product.getId())) {
      return "already-exists";
    }
    try {
      //us.addProduct(product);
      userService.addUser(us);
    }
    catch(Exception exc) {
      return "#";
    }

    return "add-to-wishlist";
  }

  @GetMapping("/addWishListItem")
  public String addWishListItem(Model model, HttpSession session) {
    User myUser = (User)session.getAttribute("gandva");
    if(myUser == null) {
      return "redirect:/user/login";
    }
    List<WishList> items = wishListService.getWishListItems(myUser.getUsername());
    List<Product> myWishListItems = new ArrayList<>();
    for(WishList item : items) {
      myWishListItems.add(productService.getProductById(item.getProductId()));
    }
    model.addAttribute("products", myWishListItems);
    return "my_wish_list";
  }
  public boolean checkIfProductAlreadyExists(String username, int productId) {
    List<WishList> items = wishListService.getWishListItems(username);
    for(WishList wl : items) {
      if(wl.getProductId()==productId) {
        return true;
      }
    }
    return false;
  }
}
